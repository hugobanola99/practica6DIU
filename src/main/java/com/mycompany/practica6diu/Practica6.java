
package com.mycompany.practica6diu;

import java.awt.Dimension;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.opencv.core.Core;
import org.opencv.core.CvType;
import org.opencv.core.Mat;
import org.opencv.highgui.HighGui;
import org.opencv.imgcodecs.Imgcodecs;
import org.opencv.imgproc.Imgproc;

/**
 *
 * @author hugob
 */
public class Practica6 extends javax.swing.JFrame {

    JFileChooser fc = new JFileChooser();
    FileNameExtensionFilter filtro = null;
    Mat img;
    int dato;
    File fichero;
    
    public Practica6() {
        filtro = new FileNameExtensionFilter("Imagenes","jpg","jpeg","png");
        fc.addChoosableFileFilter(filtro);
        this.setMinimumSize(new Dimension(800, 600));
        initComponents();
        nu.pattern.OpenCV.loadShared();
        System.loadLibrary(Core.NATIVE_LIBRARY_NAME);

        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        try {
            lienzo = new com.mycompany.practica6diu.Lienzo();
        } catch (java.io.IOException e1) {
            e1.printStackTrace();
        }
        jMenuBar1 = new javax.swing.JMenuBar();
        MenuFicheros = new javax.swing.JMenu();
        abrir = new javax.swing.JMenuItem();
        Guardar = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        salir = new javax.swing.JMenuItem();
        MenuEdicion = new javax.swing.JMenu();
        menuFiltros = new javax.swing.JMenu();
        umbralizar = new javax.swing.JMenuItem();
        MenuAyuda = new javax.swing.JMenu();
        ayuda = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout lienzoLayout = new javax.swing.GroupLayout(lienzo);
        lienzo.setLayout(lienzoLayout);
        lienzoLayout.setHorizontalGroup(
            lienzoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 571, Short.MAX_VALUE)
        );
        lienzoLayout.setVerticalGroup(
            lienzoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 260, Short.MAX_VALUE)
        );

        MenuFicheros.setMnemonic('F');
        MenuFicheros.setText("Ficheros");

        abrir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        abrir.setText("Abrir");
        abrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abrirActionPerformed(evt);
            }
        });
        MenuFicheros.add(abrir);

        Guardar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        Guardar.setText("Guardar");
        Guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GuardarActionPerformed(evt);
            }
        });
        MenuFicheros.add(Guardar);
        MenuFicheros.add(jSeparator1);

        salir.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        salir.setText("Salir");
        salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirActionPerformed(evt);
            }
        });
        MenuFicheros.add(salir);

        jMenuBar1.add(MenuFicheros);

        MenuEdicion.setMnemonic('E');
        MenuEdicion.setText("Edición");

        menuFiltros.setText("Filtros");

        umbralizar.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        umbralizar.setText("Umbralizar");
        umbralizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                umbralizarActionPerformed(evt);
            }
        });
        menuFiltros.add(umbralizar);

        MenuEdicion.add(menuFiltros);

        jMenuBar1.add(MenuEdicion);

        MenuAyuda.setText("Ayuda");

        ayuda.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_DOWN_MASK));
        ayuda.setText("Acerca de");
        ayuda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ayudaActionPerformed(evt);
            }
        });
        MenuAyuda.add(ayuda);

        jMenuBar1.add(MenuAyuda);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lienzo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(130, 130, 130)
                .addComponent(lienzo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void abrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abrirActionPerformed
        // TODO add your handling code here:
       
        int res = fc.showOpenDialog(null);
        if(res == JFileChooser.APPROVE_OPTION){
            fichero = fc.getSelectedFile();
            System.out.println("Fichero: "+fichero.getAbsolutePath());
            try {
                lienzo.setImagen(fichero.getAbsolutePath());
                repaint();
            } catch (IOException ex) {
                Logger.getLogger(Practica6.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }else if(res == JFileChooser.CANCEL_OPTION){
            System.out.println("Cancelar");
        }
       
    }//GEN-LAST:event_abrirActionPerformed

    private void salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirActionPerformed
        // TODO add your handling code here:
        System.out.println("SALIR");
        int res = JOptionPane.showConfirmDialog(rootPane, "¿Desea salir de la aplicación?", "Confirmación de Salir", JOptionPane.YES_NO_OPTION,JOptionPane.CLOSED_OPTION);
        if(res==0){
            this.setVisible(false);
        }
        
    }//GEN-LAST:event_salirActionPerformed

    private void GuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GuardarActionPerformed
        // TODO add your handling code here:
        int res = fc.showSaveDialog(null);
        if(res == JFileChooser.APPROVE_OPTION){
            System.out.println("Aceptar");
            fichero = fc.getSelectedFile();
            
            System.out.println("Fichero: "+fichero.getAbsolutePath());
            int opcion = JOptionPane.showConfirmDialog(rootPane, "¿Quiere guardar el archivo?", "Guardar Archivo", JOptionPane.YES_NO_OPTION);
            if(opcion == JOptionPane.YES_OPTION){
                Imgcodecs.imwrite(fc.getSelectedFile().getAbsolutePath(), img);
                System.out.println("Archivo Guardado");
            }
        }else if(res == JFileChooser.CANCEL_OPTION){
            System.out.println("Cancelar");
        }
       
    }//GEN-LAST:event_GuardarActionPerformed

    private void umbralizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_umbralizarActionPerformed
        // TODO add your handling code here:
        if(fichero != null){
            String in = JOptionPane.showInputDialog(rootPane,"Introduzca un valor para el umbralizado","Umbralizado",JOptionPane.DEFAULT_OPTION);
            if(isNumeric(in)){
                dato = Integer.parseInt(in);
                Mat m = Imgcodecs.imread(fc.getSelectedFile().getAbsolutePath());
                img = umbralizar(m,dato);
                BufferedImage i = (BufferedImage) HighGui.toBufferedImage(img);
                lienzo.setImagen(i);
                repaint();
                JOptionPane.showMessageDialog(rootPane, "Proceso umbralizado concluido", "Proceso Umbralizado", JOptionPane.INFORMATION_MESSAGE);
            }else{
                JOptionPane.showMessageDialog(rootPane, "Debes introducir un numero entero", "Valor erroneo", JOptionPane.ERROR_MESSAGE);
            }
            
        }else{
            JOptionPane.showMessageDialog(rootPane, "Debes abrir un fichero previamente", "Error umbralizar", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_umbralizarActionPerformed

    private void ayudaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ayudaActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(rootPane, "Selecionar una imagen desde el menú Ficheros eligiendo la opción abrir para elegir un archivo desde tu equipo local\nUna vez abierta, en el menu Edición se puede añadir el filtro umbralizar, al que habrá que introducir el valor del umbral", "Acerca de",JOptionPane.INFORMATION_MESSAGE);
        
    }//GEN-LAST:event_ayudaActionPerformed
    
    
     private Mat umbralizar(Mat imagen_original, Integer umbral) {
        // crear dos imágenes en niveles de gris con el mismo
        // tamaño que la original
        Mat imagenGris = new Mat(imagen_original.rows(),
        imagen_original.cols(),
        CvType.CV_8U);
        Mat imagenUmbralizada = new Mat(imagen_original.rows(),
        imagen_original.cols(),
        CvType.CV_8U);
        // convierte a niveles de grises la imagen original
        Imgproc.cvtColor(imagen_original,
        imagenGris,
        Imgproc.COLOR_BGR2GRAY);
        // umbraliza la imagen:
        // - píxeles con nivel de gris > umbral se ponen a 1
        // - píxeles con nivel de gris <= umbra se ponen a 0
        Imgproc.threshold(imagenGris,
        imagenUmbralizada,
        umbral,
        255,
        Imgproc.THRESH_BINARY);
        // se devuelve la imagen umbralizada
        return imagenUmbralizada;


    }
     
     public boolean isNumeric(String n){
         boolean res;
          try {
                Integer.parseInt(n);
                res = true;
            }catch(NumberFormatException excepcion){
                res = false;
                
            }
          return res;
     }
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Guardar;
    private javax.swing.JMenu MenuAyuda;
    private javax.swing.JMenu MenuEdicion;
    private javax.swing.JMenu MenuFicheros;
    private javax.swing.JMenuItem abrir;
    private javax.swing.JMenuItem ayuda;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private com.mycompany.practica6diu.Lienzo lienzo;
    private javax.swing.JMenu menuFiltros;
    private javax.swing.JMenuItem salir;
    private javax.swing.JMenuItem umbralizar;
    // End of variables declaration//GEN-END:variables
}
